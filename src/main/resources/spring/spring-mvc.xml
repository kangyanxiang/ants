<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd">
	
	
	<!-- 对静态资源文件的访问 -->
	<mvc:resources mapping="/javascript/**" location="/js/"/>  
	<mvc:resources mapping="/styles/**" location="/css/"/>  
	<mvc:resources mapping="/images/**" location="/images/"/>  
	<mvc:default-servlet-handler />
	<!-- task任务扫描注解 -->  
	<task:annotation-driven/>
	<!-- 上传下载操作  -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		  <property name="defaultEncoding" value="utf-8" />
	      <property name="maxUploadSize" value="10485760000" />
	      <property name="maxInMemorySize" value="40960" />
	</bean>
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="prefix" value="/WEB-INF/jsp/"/>  
        <property name="suffix" value=".jsp"/>  
    </bean>  
	
	<!-- 只扫描@Controller注释的类 -->
	<context:component-scan base-package="com.awifi.toe.**.action" use-default-filters="false">
		<context:include-filter expression="org.springframework.stereotype.Controller" type="annotation" />
	</context:component-scan>
	
	<!-- json 处理 -->
	
	<!--  <bean id="jsonResultNamingStrategy" class="com.awifi.tog.base.util.JsonResultNamingStrategy"></bean> -->
	<bean id="jsonObjectMapper" class="com.fasterxml.jackson.databind.ObjectMapper">
		<property name="serializationInclusion">
			<value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>
		</property>
		<!-- <property name="propertyNamingStrategy" ref="jsonResultNamingStrategy"></property> -->
	</bean>
	<mvc:annotation-driven validator="validator">
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" >
				<property name="objectMapper" ref="jsonObjectMapper" />
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=utf-8</value>
					</list>
			    </property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册-->  
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">  
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>  
        <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->  
        <property name="validationMessageSource" ref="messageSource"/>  
    </bean>
    
    <!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->  
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">  
        <property name="basenames">  
            <list>  
                <!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找  -->  
                <value>classpath:messages/messages</value>  
            </list>  
        </property>  
        <property name="useCodeAsDefaultMessage" value="false"/>  
        <property name="defaultEncoding" value="UTF-8"/>  
        <property name="cacheSeconds" value="60"/>  
    </bean>
    
    <!-- 拦截器 -->
	<mvc:interceptors>
		<!-- 防止sql注入拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.awifi.toe.base.interceptor.SqlInterceptor" />
		</mvc:interceptor>
		<!-- api接口拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/api/**" />
			<bean class="com.awifi.toe.base.interceptor.ApiInterceptor" />
		</mvc:interceptor>
		<!-- 防止sql注入拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.awifi.toe.base.interceptor.SqlInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
    
</beans>